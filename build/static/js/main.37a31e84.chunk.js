(this.webpackJsonpphonebook = this.webpackJsonpphonebook || []).push([[0], { 40: function (e, n, t) { }, 45: function (e, n, t) { "use strict"; t.r(n); var r = t(16), o = t.n(r), s = t(3), a = t(2), c = t(4), u = t.n(c), i = "/api/persons", b = function (e) { return u.a.post(i, e).then((function (e) { return e.data })) }, l = function (e, n) { return u.a.put("".concat(i, "/").concat(e), n).then((function (e) { return e.data })) }, j = function () { return u.a.get(i).then((function (e) { return e.data })) }, m = function (e) { return u.a.delete("".concat(i, "/").concat(e)).then((function (e) { return e.data })) }, d = t(0), f = function (e) { var n = e.newName, t = e.newNumber, r = e.persons, o = e.setNewName, s = e.setNewNumber, a = e.setPersons, c = (e.message, e.setMessage); return Object(d.jsxs)("form", { onSubmit: function (e) { e.preventDefault(); for (var u = { name: n, number: t, id: r.length + 1 }, i = !1, j = !1, m = 0; m < r.length; m++)r[m].name.toLowerCase() === n.toLowerCase() && (i = !0), r[m].number.toLowerCase() === t.toLowerCase() && (j = !0); if (i) { if (o(""), s(""), !j && window.confirm("".concat(n, " is already added to phonebook, replace the old number with a new one?"))) { var d = r.filter((function (e) { return e.name.toLowerCase() === n.toLowerCase() ? e : "" })); l(d[0]._id, { name: d[0].name, number: t, _id: d[0]._id }).then((function (e) { var n = r.filter((function (n) { return n.name === e.name ? n.number = e.number : n.number })); a(n) })).catch((function (e) { console.log("This user is already deleted."), c("Information of ".concat(d[0].name, " has already been removed from server.")) })) } } else console.log(u), b(u).then((function (e) { a(r.concat(u)), o(""), s(""), c("".concat(u.name, " is added")), setTimeout((function () { return c(null) }), 3e3) })).catch((function (e) { c("Person Validation Failed: ".concat(Object.values(e.response.data))) })) }, children: ["name:", Object(d.jsx)("input", { type: "text", value: n, onChange: function (e) { o(e.target.value) } }), Object(d.jsx)("br", {}), "number:", Object(d.jsx)("input", { type: "text", value: t, onChange: function (e) { s(e.target.value) } }), Object(d.jsx)("br", {}), Object(d.jsx)("button", { type: "submit", children: "Add" })] }) }, h = function (e) { var n = e.persons, t = e.setPersons; return Object(d.jsxs)("form", { onSubmit: function (e) { window.confirm("Delete ".concat(n.name, "?")) && m(n._id).then((function (e) { console.log(e), t(e) })) }, children: [n.name, " ", n.number, Object(d.jsx)("button", { className: "deleteButton", type: "submit", children: "Delete" })] }) }, O = function (e) { var n = e.persons, t = e.setPersons; return Object(d.jsx)("div", { children: n.map((function (e) { return Object(d.jsx)(h, { persons: e, setPersons: t }, e.name) })) }) }, p = function (e) { var n = e.persons, t = Object(a.useState)(n), r = Object(s.a)(t, 2), o = r[0], c = r[1]; return Object(d.jsxs)("div", { children: ["Filter shown with:", Object(d.jsx)("input", { type: "text", onChange: function (e) { e.preventDefault(); var t = e.target.value; t = t.toLowerCase(); var r; r = n.filter((function (e) { return "" !== t ? -1 !== e.name.toLowerCase().search(t) : null })), c(r), console.log("result length", r.length) } }), o.map((function (e, n) { return Object(d.jsxs)("li", { children: [e.name, " - ", e.number] }, e._id) }))] }) }, v = function (e) { var n = e.message; return null === n ? null : Object(d.jsx)("div", { className: "notifMessage", children: n }) }; t(40); t(41).config(); var w = function () { var e = Object(a.useState)([]), n = Object(s.a)(e, 2), t = n[0], r = n[1], o = Object(a.useState)(""), c = Object(s.a)(o, 2), u = c[0], i = c[1], b = Object(a.useState)(""), l = Object(s.a)(b, 2), m = l[0], h = l[1], w = Object(a.useState)(null), x = Object(s.a)(w, 2), g = x[0], N = x[1]; return Object(a.useEffect)((function () { j().then((function (e) { r(e) })) }), []), Object(d.jsxs)("div", { children: [Object(d.jsx)("h1", { children: "Phonebook" }), Object(d.jsx)(v, { message: g }), Object(d.jsx)(p, { persons: t }), Object(d.jsx)("h2", { children: "Add a new contact" }), Object(d.jsx)(f, { newName: u, newNumber: m, persons: t, setNewName: i, setNewNumber: h, setPersons: r, message: g, setMessage: N }), Object(d.jsx)("h3", { children: "Numbers" }), Object(d.jsx)(O, { persons: t, setPersons: r })] }) }; o.a.render(Object(d.jsx)(w, {}), document.getElementById("root")) } }, [[45, 1, 2]]]);
//# sourceMappingURL=main.37a31e84.chunk.js.map